{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "3edcfe0b-24d7-4321-b355-a6dc730c155d",
   "metadata": {
    "tags": []
   },
   "source": [
    "# DC2 Image Analysis, 511 keV, Image Deconvolution using CDS in the Galactic coordinate system\n",
    "\n",
    "updated on 2024-02-22 (the commit f27cd0bee26c56a93d34a06f2c0af88cb1f59f6e)\n",
    "\n",
    "This notebook focuses on the image deconvolution with the Compton data space (CDS) in the Galactic coordinate system.\n",
    "An example of the image analysis will be presented using the 511keV thin disk 3-month simulation data created for DC2.\n",
    "\n",
    "In DC2, we have two options on the coordinate system to describe the Compton scattering direction ($\\chi\\psi$) in the image deconvolution. Please also check the notes written in 511keV-DC2-ScAtt-DataReduction.ipynb."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "e751bbd5",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "from histpy import Histogram, HealpixAxis, Axis, Axes\n",
    "from mhealpy import HealpixMap\n",
    "from astropy.coordinates import SkyCoord, cartesian_to_spherical, Galactic\n",
    "\n",
    "from cosipy.response import FullDetectorResponse\n",
    "from cosipy.spacecraftfile import SpacecraftFile\n",
    "from cosipy.ts_map.TSMap import TSMap\n",
    "from cosipy.data_io import UnBinnedData, BinnedData\n",
    "from cosipy.image_deconvolution import SpacecraftAttitudeExposureTable, CoordsysConversionMatrix, DataLoader, ImageDeconvolution\n",
    "from cosipy.util import fetch_wasabi_file\n",
    "\n",
    "# cosipy uses astropy units\n",
    "import astropy.units as u\n",
    "from astropy.units import Quantity\n",
    "from astropy.coordinates import SkyCoord\n",
    "from astropy.time import Time\n",
    "from astropy.table import Table\n",
    "from astropy.io import fits\n",
    "from scoords import Attitude, SpacecraftFrame\n",
    "\n",
    "#3ML is needed for spectral modeling\n",
    "from threeML import *\n",
    "from astromodels import Band\n",
    "\n",
    "#Other standard libraries\n",
    "import os\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.gridspec import GridSpec \n",
    "\n",
    "import healpy as hp\n",
    "from tqdm.autonotebook import tqdm\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00f20cda-81f8-4685-b9c4-f9423e5ebcf7",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 0. Files needed for this notebook\n",
    "\n",
    "From wasabi\n",
    "- cosi-pipeline-public/COSI-SMEX/DC2/Responses/PointSourceReponse/psr_gal_511_DC2.h5.gz (please gunzip it)\n",
    "    - a pre-computed 511 keV line response file converted into the Galactic coordinate system\n",
    "- cosi-pipeline-public/COSI-SMEX/DC2/Data/Sources/511_thin_disk_3months_unbinned_data.fits.gz\n",
    "- cosi-pipeline-public/COSI-SMEX/DC2/Data/Backgrounds/albedo_photons_3months_unbinned_data.fits.gz\n",
    "    - In this notebook, only the albedo gamma-ray background is considered for a tutorial.\n",
    "    - If you want to consider all of the background components, please replace it with cosi-pipeline-public/COSI-SMEX/DC2/Data/Backgrounds/total_bg_3months_unbinned_data.fits.gz\n",
    "    - Note that total_bg_3months_unbinned_data.fits.gz is 14.15 GB.\n",
    "\n",
    "From docs/tutorials/image_deconvolution/511keV/GalacticCDS\n",
    "- inputs_511keV_DC2.yaml\n",
    "- imagedeconvolution_parfile_gal_511keV.yml"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cbb84ad7-5fcb-4a56-abc3-6acac81c0879",
   "metadata": {},
   "source": [
    "You can download the data and detector response from wasabi. You can skip this cell if you already have downloaded the files."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cafd42c7-7f7f-4e6e-acd7-8e76eb5160dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Response file:\n",
    "# wasabi path: COSI-SMEX/DC2/Responses/PointSourceReponse/psr_gal_511_DC2.h5.gz\n",
    "# File size: 3.82 GB\n",
    "fetch_wasabi_file('COSI-SMEX/DC2/Responses/PointSourceReponse/psr_gal_511_DC2.h5.gz')\n",
    "os.system('gunzip psr_gal_511_DC2.h5.gz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ae368f5f-2d30-4ba6-a152-c5bbb4187471",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Source file (511 keV thin disk model):\n",
    "# wasabi path: COSI-SMEX/DC2/Data/Sources/511_thin_disk_3months_unbinned_data.fits.gz\n",
    "# File size: 202.45 MB\n",
    "fetch_wasabi_file('COSI-SMEX/DC2/Data/Sources/511_thin_disk_3months_unbinned_data.fits.gz')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "dddb7361-a523-42b4-93fe-da0b3ce75deb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Background file (albedo gamma):\n",
    "# wasabi path: COSI-SMEX/DC2/Data/Backgrounds/albedo_photons_3months_unbinned_data.fits.gz\n",
    "# File size: 2.69 GB\n",
    "fetch_wasabi_file('COSI-SMEX/DC2/Data/Backgrounds/albedo_photons_3months_unbinned_data.fits.gz')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "26d6eb3a",
   "metadata": {},
   "source": [
    "# 1. Create binned event/background files in the Galactic coordinate system\n",
    "\n",
    "<span style=\"color:red\"> please modify \"path_data\" corresponding to your environment.</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fada24bc",
   "metadata": {},
   "outputs": [],
   "source": [
    "path_data = \"path/to/data/\""
   ]
  },
  {
   "cell_type": "markdown",
   "id": "90fec91e-8209-4f03-bbe3-b9acb78682b8",
   "metadata": {},
   "source": [
    "**Source**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "9cae1835-e54b-4720-b3a6-196c42cbd1ce",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binning data...\n",
      "Time unit: s\n",
      "Em unit: keV\n",
      "Phi unit: deg\n",
      "PsiChi unit: None\n",
      "CPU times: user 7.75 s, sys: 255 ms, total: 8 s\n",
      "Wall time: 8.06 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "signal_filepath = path_data + \"511_thin_disk_3months_unbinned_data.fits.gz\"\n",
    "\n",
    "binned_signal = BinnedData(input_yaml = \"inputs_511keV_DC2.yaml\")\n",
    "\n",
    "binned_signal.get_binned_data(unbinned_data = signal_filepath, psichi_binning=\"galactic\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3544076d-3475-48d6-9aec-55dab18567c2",
   "metadata": {},
   "source": [
    "**Background**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "801ba251-96e0-4243-8f55-1678823f1d58",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "binning data...\n",
      "Time unit: s\n",
      "Em unit: keV\n",
      "Phi unit: deg\n",
      "PsiChi unit: None\n",
      "CPU times: user 1min 51s, sys: 3.96 s, total: 1min 55s\n",
      "Wall time: 1min 55s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "bkg_filepath = path_data + \"albedo_photons_3months_unbinned_data.fits.gz\"\n",
    "\n",
    "binned_bkg = BinnedData(input_yaml = \"inputs_511keV_DC2.yaml\")\n",
    "\n",
    "binned_bkg.get_binned_data(unbinned_data = bkg_filepath, psichi_binning=\"galactic\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4eb8577f-d394-49b9-a13f-a527d4512f77",
   "metadata": {},
   "source": [
    "Convert the data into sparse matrices & add the signal to the background"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "f224b957-d0df-4b4b-98dd-90d3a5bda3fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "signal = binned_signal.binned_data.to_dense()\n",
    "bkg = binned_bkg.binned_data.to_dense()\n",
    "event = signal + bkg"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "217e40dd-5587-4c43-bb77-44ddba2a8dbb",
   "metadata": {},
   "source": [
    "Save the binned histograms"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "24289425-380b-4d26-a7c0-cbbd5c58e7b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "signal.write(\"511keV_dc2_galactic_signal.hdf5\", overwrite = True)\n",
    "bkg.write(\"511keV_dc2_galactic_bkg.hdf5\", overwrite = True)\n",
    "event.write(\"511keV_dc2_galactic_event.hdf5\", overwrite = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "badfd194-59f0-46d4-90b3-73cce60207c8",
   "metadata": {},
   "source": [
    "Load the saved files"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e0f3dcae-5d3c-45af-931d-057d5681859c",
   "metadata": {},
   "outputs": [],
   "source": [
    "signal = Histogram.open(\"511keV_dc2_galactic_signal.hdf5\")\n",
    "bkg = Histogram.open(\"511keV_dc2_galactic_bkg.hdf5\")\n",
    "event = Histogram.open(\"511keV_dc2_galactic_event.hdf5\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e7bb933-0ec0-47af-a18c-ac241abfea82",
   "metadata": {},
   "source": [
    "In DC2, the number of time bins should be 1 when you perform the image deconvolution using the galactic CDS.\n",
    "It is because the pre-computed response files in the galactic coordinate have no time axis, and all of the events are assumed to be projected into a single galactic CDS.\n",
    "In the future, we plan to introduce more flexible binning."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "88efdbfa-aa5e-40b3-bdd6-2635946318e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/latex": [
       "$[1.8354873 \\times 10^{9},~1.8434673 \\times 10^{9}] \\; \\mathrm{s}$"
      ],
      "text/plain": [
       "<Quantity [1.83548730e+09, 1.84346726e+09] s>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bkg.axes['Time'].edges"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c259412",
   "metadata": {},
   "source": [
    "# 2. Load the response matrix"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "b5b295cf-0a96-4501-aa4e-4182a21dfe63",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 3.61 s, sys: 25.7 s, total: 29.3 s\n",
      "Wall time: 47.9 s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "response_path = path_data + \"psr_gal_511_DC2.h5\"\n",
    "\n",
    "image_response = Histogram.open(response_path)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fbdbd818-8a58-4d25-a657-d43fc7f88ea4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['NuLambda', 'Ei', 'Em', 'Phi', 'PsiChi'], dtype='<U8')"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "image_response.axes.labels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "d60c7d40-0486-44c2-921b-423b9017dbeb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3072, 1, 1, 60, 3072)"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "image_response.contents.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a409aa7b-9bd8-443b-be46-ee5a053f8349",
   "metadata": {
    "tags": []
   },
   "source": [
    "# 3. Prepare a 'fake' coordsys conversion matrix\n",
    "\n",
    "The coordsys conversion matrix was initially introduced to convert a model map in the Galactic coordinates into the local coordinates.\n",
    "In the case of this notebook, the CDS is in the Galactic coordinates; thus, ideally, we do not have to convert the coordinates of the model map.\n",
    "However, as for now, the code for the image deconvolution was mainly developed for the CDS in the local coordinates and requires the conversion matrix, so here, we generate a ‘fake’ coordinate conversion matrix, which is an unit matrix. \n",
    "Then, the same code can be applied for both methods. \n",
    "We will consider removing this fake coordinate conversion matrix in the future."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "81f7986b-2904-4e8f-921d-0bd1b224e4bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "16"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nside = image_response.axes['NuLambda'].nside\n",
    "nside"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e6c1f64e-148e-4406-81c1-89a8c962864a",
   "metadata": {},
   "outputs": [],
   "source": [
    "axes = [event.axes['Time'],\n",
    "        HealpixAxis(nside = nside, coordsys = \"galactic\", label = \"lb\"), \n",
    "        HealpixAxis(nside = nside, coordsys = \"galactic\", label = \"NuLambda\")]\n",
    "\n",
    "ccm = CoordsysConversionMatrix(axes, binning_method = 'Time', unit = u.dimensionless_unscaled, sparse = True)\n",
    "\n",
    "for ipix in range(axes[1].npix):\n",
    "    ccm[:,ipix,ipix] = 1 * u.dimensionless_unscaled"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "5bbced8d-8157-4b40-a2bb-a20c9ef28317",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table><tbody><tr><th style=\"text-align: left\">Format</th><td style=\"text-align: left\">coo</td></tr><tr><th style=\"text-align: left\">Data Type</th><td style=\"text-align: left\">float64</td></tr><tr><th style=\"text-align: left\">Shape</th><td style=\"text-align: left\">(1, 3072, 3072)</td></tr><tr><th style=\"text-align: left\">nnz</th><td style=\"text-align: left\">3072</td></tr><tr><th style=\"text-align: left\">Density</th><td style=\"text-align: left\">0.0003255208333333333</td></tr><tr><th style=\"text-align: left\">Read-only</th><td style=\"text-align: left\">True</td></tr><tr><th style=\"text-align: left\">Size</th><td style=\"text-align: left\">96.0K</td></tr><tr><th style=\"text-align: left\">Storage ratio</th><td style=\"text-align: left\">0.0</td></tr></tbody></table>"
      ],
      "text/plain": [
       "<COO: shape=(1, 3072, 3072), dtype=float64, nnz=3072, fill_value=0.0>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ccm.contents"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "31ec05ad-90b7-4fad-9ad0-98cfd6483d41",
   "metadata": {},
   "source": [
    "# 4. Imaging deconvolution"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6e88ca7f",
   "metadata": {
    "jp-MarkdownHeadingCollapsed": true
   },
   "source": [
    "## Brief overview of the image deconvolution\n",
    "\n",
    "Basically, we have to maximize the following likelihood function\n",
    "\n",
    "$$\n",
    "\\log L = \\sum_i X_i \\log \\epsilon_i - \\sum_i \\epsilon_i\n",
    "$$\n",
    "\n",
    "$X_i$: detected counts at $i$-th bin ( $i$ : index of the Compton Data Space)\n",
    "\n",
    "$\\epsilon_i = \\sum_j R_{ij} \\lambda_j + b_i$ : expected counts ( $j$ : index of the model space)\n",
    "\n",
    "$\\lambda_j$ : the model map (basically gamma-ray flux at $j$-th pixel)\n",
    "\n",
    "$b_i$ : the background at $i$-th bin\n",
    "\n",
    "$R_{ij}$ : the response matrix\n",
    "\n",
    "Since we have to optimize the flux in each pixel, and the number of parameters is large, we adopt an iterative approach to find a solution of the above equation. The simplest one is the ML-EM (Maximum Likelihood Expectation Maximization) algorithm. It is also known as the Richardson-Lucy algorithm.\n",
    "\n",
    "$$\n",
    "\\lambda_{j}^{k+1} = \\lambda_{j}^{k} + \\delta \\lambda_{j}^{k}\n",
    "$$\n",
    "$$\n",
    "\\delta \\lambda_{j}^{k} = \\frac{\\lambda_{j}^{k}}{\\sum_{i} R_{ij}} \\sum_{i} \\left(\\frac{ X_{i} }{\\epsilon_{i}} - 1 \\right) R_{ij} \n",
    "$$\n",
    "\n",
    "We refer to $\\delta \\lambda_{j}^{k}$ as the delta map.\n",
    "\n",
    "As for now, the two improved algorithms are implemented in COSIpy.\n",
    "\n",
    "- Accelerated ML-EM algorithm (Knoedlseder+99)\n",
    "\n",
    "$$\n",
    "\\lambda_{j}^{k+1} = \\lambda_{j}^{k} + \\alpha^{k} \\delta \\lambda_{j}^{k}\n",
    "$$\n",
    "$$\n",
    "\\alpha^{k} < \\mathrm{max}(- \\lambda_{j}^{k} / \\delta \\lambda_{j}^{k})\n",
    "$$\n",
    "\n",
    "Practically, in order not to accelerate the algorithm excessively, we set the maximum value of $\\alpha$ ($\\alpha_{\\mathrm{max}}$). Then, $\\alpha$ is calculated as:\n",
    "\n",
    "$$\n",
    "\\alpha^{k} = \\mathrm{min}(\\mathrm{max}(- \\lambda_{j}^{k} / \\delta \\lambda_{j}^{k}), \\alpha_{\\mathrm{max}})\n",
    "$$\n",
    "\n",
    "- Noise damping using gaussian smoothing (Knoedlseder+05, Siegert+20)\n",
    "\n",
    "$$\n",
    "\\lambda_{j}^{k+1} = \\lambda_{j}^{k} + \\alpha^{k} \\left[ w_j \\delta \\lambda_{j}^{k} \\right]_{\\mathrm{gauss}}\n",
    "$$\n",
    "$$\n",
    "w_j = \\left(\\sum_{i} R_{ij}\\right)^\\beta\n",
    "$$\n",
    "\n",
    "$\\left[ ... \\right]_{\\mathrm{gauss}}$ means that the differential image is smoothed by a gaussian filter."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0a2582e",
   "metadata": {},
   "source": [
    "## 4-1. Prepare DataLoader containing all neccesary datasets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "de8055f7-4aab-4a17-8751-42493f9e88d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "dataloader = DataLoader()\n",
    "\n",
    "dataloader.event_dense = event\n",
    "dataloader.bkg_dense = bkg\n",
    "\n",
    "# the loaded response matrix should be assigned to both full_detector_response/image_response_dense in the Galactic CDS method.\n",
    "dataloader.full_detector_response = image_response\n",
    "dataloader.image_response_dense = image_response \n",
    "\n",
    "dataloader.response_on_memory = True\n",
    "dataloader.coordsys_conv_matrix = ccm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "59d48019",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "... checking the axis Time of the event and background files...\n",
      "    --> pass (edges)\n",
      "    --> pass (unit)\n",
      "... checking the axis Em of the event and background files...\n",
      "    --> pass (edges)\n",
      "    --> pass (unit)\n",
      "... checking the axis Phi of the event and background files...\n",
      "    --> pass (edges)\n",
      "    --> pass (unit)\n",
      "... checking the axis PsiChi of the event and background files...\n",
      "    --> pass (edges)\n",
      "    --> pass (unit)\n",
      "...checking the axis Em of the event and response files...\n",
      "    --> pass (edges)\n",
      "...checking the axis Phi of the event and response files...\n",
      "    --> pass (edges)\n",
      "...checking the axis PsiChi of the event and response files...\n",
      "    --> pass (edges)\n",
      "The axes in the event and background files are redefined. Now they are consistent with those of the response file.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "WARNING FutureWarning: Note that _modify_axes() in DataLoader was implemented for a temporary use. It will be removed in the future.\n",
      "\n",
      "\n",
      "WARNING UserWarning: Make sure to perform _modify_axes() only once after the data are loaded.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "dataloader._modify_axes()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "241505ad",
   "metadata": {},
   "source": [
    "(In the future, we plan to remove the method \"_modify_axes.\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5bc6a570",
   "metadata": {},
   "source": [
    "Here, we calculate an auxiliary matrix for the deconvolution. Basically, it is a response matrix projected into the model space ($\\sum_{i} R_{ij}$). Currently, it is mandatory to run this command for the image deconvolution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "0a5c9a02",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "... (DataLoader) calculating a projected image response ...\n",
      "CPU times: user 395 ms, sys: 340 ms, total: 735 ms\n",
      "Wall time: 735 ms\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "dataloader.calc_image_response_projected()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b1a0269e",
   "metadata": {},
   "source": [
    "## 4-3. Initialize the instance of the image deconvolution class\n",
    "\n",
    "First, we prepare an instance of the ImageDeconvolution class and then register the dataset and parameters for the deconvolution. After that, you can start the calculation."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "79eb910c",
   "metadata": {},
   "source": [
    "<span style=\"color:red\"> please modify this parameter_filepath corresponding to your environment.</span>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "5fa73486",
   "metadata": {},
   "outputs": [],
   "source": [
    "parameter_filepath = \"imagedeconvolution_parfile_gal_511keV.yml\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a4b47308-3e13-400d-bebc-b5d1e093201d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "data for image deconvolution was set ->  <cosipy.image_deconvolution.data_loader.DataLoader object at 0x2f41b8280>\n",
      "parameter file for image deconvolution was set ->  imagedeconvolution_parfile_gal_511keV.yml\n"
     ]
    }
   ],
   "source": [
    "image_deconvolution = ImageDeconvolution()\n",
    "\n",
    "# set dataloader to image_deconvolution\n",
    "image_deconvolution.set_data(dataloader)\n",
    "\n",
    "# set a parameter file for the image deconvolution\n",
    "image_deconvolution.read_parameterfile(parameter_filepath)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2345d9d",
   "metadata": {},
   "source": [
    "### Initialize image_deconvolution\n",
    "\n",
    "In this process, a model map is defined following the input parameters, and it is initialized. Also, it prepares ancillary data for the image deconvolution, e.g., the expected counts with the initial model map, gaussian smoothing filter etc.\n",
    "\n",
    "I describe parameters in the parameter file.\n",
    "\n",
    "#### model_property\n",
    "\n",
    "| Name | Unit | Description | Notes |\n",
    "| :---: | :---: | :---: | :---: |\n",
    "| coordinate | str | the coordinate system of the model map | As for now, it must be 'galactic' |\n",
    "| nside | int | NSIDE of the model map | it must be the same as NSIDE of 'lb' axis of the coordinate conversion matrix|\n",
    "| scheme | str | SCHEME of the model map | As for now, it must be 'ring' |\n",
    "| energy_edges | list of float [keV] | The definition of the energy bins of the model map | As for now, it must be the same as that of the response matrix |\n",
    "\n",
    "#### model_initialization\n",
    "\n",
    "| Name | Unit | Description | Notes |\n",
    "| :---: | :---: | :---: | :---: |\n",
    "| algorithm | str | the method name to initialize the model map | As for now, only 'flat' can be used |\n",
    "| parameter_flat:values | list of float [cm-2 s-1 sr-1] | the list of photon fluxes for each energy band | the length of the list should be the same as the length of \"energy_edges\" - 1 |\n",
    "\n",
    "#### deconvolution\n",
    "\n",
    "| Name | Unit | Description | Notes |\n",
    "| :---: | :---: | :---: | :---: |\n",
    "|algorithm | str | the name of the image deconvolution algorithm| As for now, only 'RL' is supported |\n",
    "|||||\n",
    "|parameter_RL:iteration | int | The maximum number of the iteration | |\n",
    "|parameter_RL:acceleration | bool | whether the accelerated ML-EM algorithm (Knoedlseder+99) is used | |\n",
    "|parameter_RL:alpha_max | float | the maximum value for the acceleration parameter | |\n",
    "|parameter_RL:save_results_each_iteration | bool | whether an updated model map, detal map, likelihood etc. are saved at the end of each iteration | |\n",
    "|parameter_RL:response_weighting | bool | whether a delta map is renormalized based on the exposure time on each pixel, namely $w_j = (\\sum_{i} R_{ij})^{\\beta}$ (see Knoedlseder+05, Siegert+20) | |\n",
    "|parameter_RL:response_weighting_index | float | $\\beta$ in the above equation | |\n",
    "|parameter_RL:smoothing | bool | whether a Gaussian filter is used (see Knoedlseder+05, Siegert+20)  | |\n",
    "|parameter_RL:smoothing_FWHM | float, degree | the FWHM of the Gaussian in the filter | |\n",
    "|parameter_RL:background_normalization_fitting | bool | whether the background normalization factor is optimized at each iteration | As for now, the single background normalization factor is used in all of the bins |\n",
    "|parameter_RL:background_normalization_range | list of float | the range of the normalization factor | should be positive |"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "879053e3-ac7b-4a0a-ad58-24e3fb137065",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "#### Initialization ####\n",
      "1. generating a model map\n",
      "---- parameters ----\n",
      "coordinate: galactic\n",
      "energy_edges:\n",
      "- 509.0\n",
      "- 513.0\n",
      "nside: 16\n",
      "scheme: ring\n",
      "\n",
      "2. initializing the model map ...\n",
      "---- parameters ----\n",
      "algorithm: flat\n",
      "parameter_flat:\n",
      "  values:\n",
      "  - 1e-4\n",
      "\n",
      "3. registering the deconvolution algorithm ...\n",
      "... calculating the expected events with the initial model map ...\n",
      "... calculating the response weighting filter...\n",
      "... calculating the gaussian filter...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f867026503df4ec38a7742788ff48203",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/3072 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---- parameters ----\n",
      "algorithm: RL\n",
      "parameter_RL:\n",
      "  acceleration: true\n",
      "  alpha_max: 10.0\n",
      "  background_normalization_fitting: false\n",
      "  background_normalization_range:\n",
      "  - 0.01\n",
      "  - 10.0\n",
      "  iteration: 10\n",
      "  response_weighting: true\n",
      "  response_weighting_index: 0.5\n",
      "  save_results_each_iteration: false\n",
      "  smoothing: true\n",
      "  smoothing_FWHM: 2.0\n",
      "  smoothing_max_sigma: 10.0\n",
      "\n",
      "#### Done ####\n",
      "\n"
     ]
    }
   ],
   "source": [
    "image_deconvolution.initialize()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5fa48a9c",
   "metadata": {},
   "source": [
    "### (You can change the parameters as follows)\n",
    "\n",
    "Note that when you modify the parameters, do not forget to run \"initialize\" again!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "1a658d2a-4dee-4d05-83ae-d7ac06317c73",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "#### Initialization ####\n",
      "1. generating a model map\n",
      "---- parameters ----\n",
      "coordinate: galactic\n",
      "energy_edges:\n",
      "- 509.0\n",
      "- 513.0\n",
      "nside: 16\n",
      "scheme: ring\n",
      "\n",
      "2. initializing the model map ...\n",
      "---- parameters ----\n",
      "algorithm: flat\n",
      "parameter_flat:\n",
      "  values:\n",
      "  - 1e-4\n",
      "\n",
      "3. registering the deconvolution algorithm ...\n",
      "... calculating the expected events with the initial model map ...\n",
      "... calculating the gaussian filter...\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7c032f939ff743e3aed4c0687771765b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/3072 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "---- parameters ----\n",
      "algorithm: RL\n",
      "parameter_RL:\n",
      "  acceleration: true\n",
      "  alpha_max: 5.0\n",
      "  background_normalization_fitting: true\n",
      "  background_normalization_range:\n",
      "  - 0.01\n",
      "  - 10.0\n",
      "  iteration: 50\n",
      "  response_weighting: false\n",
      "  response_weighting_index: 0.5\n",
      "  save_results_each_iteration: false\n",
      "  smoothing: true\n",
      "  smoothing_FWHM: 3.0\n",
      "  smoothing_max_sigma: 10.0\n",
      "\n",
      "#### Done ####\n",
      "\n"
     ]
    }
   ],
   "source": [
    "image_deconvolution.override_parameter(\"deconvolution:parameter_RL:iteration = 50\")\n",
    "image_deconvolution.override_parameter(\"deconvolution:parameter_RL:background_normalization_fitting = True\")\n",
    "image_deconvolution.override_parameter(\"deconvolution:parameter_RL:alpha_max = 5.0\")\n",
    "image_deconvolution.override_parameter(\"deconvolution:parameter_RL:smoothing_FWHM = 3.0\")\n",
    "image_deconvolution.override_parameter(\"deconvolution:parameter_RL:response_weighting = False\")\n",
    "\n",
    "image_deconvolution.initialize()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f764066e",
   "metadata": {},
   "source": [
    "## 4-5. Start the image deconvolution\n",
    "\n",
    "**With MacBook Pro with M1 Max and 64 GB memory, it takes about 1.5 minutes for 50 iterations.**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a57fbf71-2fcc-48c4-9ac7-4c545dca67c9",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "#### Deconvolution Starts ####\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "123a41b5298c4d5eba8c9cf62c8c5b76",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/50 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "  Iteration 1/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "WARNING RuntimeWarning: invalid value encountered in divide\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 386050.327946638\n",
      "    background_normalization: 1.1900860583584663\n",
      "  Iteration 2/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 400418.0610733818\n",
      "    background_normalization: 1.1604351059838505\n",
      "  Iteration 3/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 411089.6070768463\n",
      "    background_normalization: 1.0528532374315778\n",
      "  Iteration 4/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 412844.82476469607\n",
      "    background_normalization: 1.0586383806179276\n",
      "  Iteration 5/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 405718.57862391905\n",
      "    background_normalization: 0.9646219744282969\n",
      "  Iteration 6/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 415983.925941571\n",
      "    background_normalization: 1.1066673898750912\n",
      "  Iteration 7/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 416858.4161653833\n",
      "    background_normalization: 1.0806318578055656\n",
      "  Iteration 8/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 414257.0394215712\n",
      "    background_normalization: 1.0102344432919617\n",
      "  Iteration 9/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 417764.7103005161\n",
      "    background_normalization: 1.0821152684078852\n",
      "  Iteration 10/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 418085.83036392974\n",
      "    background_normalization: 1.0628439330942752\n",
      "  Iteration 11/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 416671.5483449631\n",
      "    background_normalization: 1.01071378053145\n",
      "  Iteration 12/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 418586.7202159421\n",
      "    background_normalization: 1.06125861498167\n",
      "  Iteration 13/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 418748.2154258507\n",
      "    background_normalization: 1.046438809261912\n",
      "  Iteration 14/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 417929.9387790803\n",
      "    background_normalization: 1.0064089218442853\n",
      "  Iteration 15/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419053.901413677\n",
      "    background_normalization: 1.044315278190893\n",
      "  Iteration 16/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419142.6261917602\n",
      "    background_normalization: 1.032928348339306\n",
      "  Iteration 17/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 418668.7303367079\n",
      "    background_normalization: 1.0022726458324056\n",
      "  Iteration 18/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419331.81249085104\n",
      "    background_normalization: 1.0310819169451524\n",
      "  Iteration 19/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419384.6657808487\n",
      "    background_normalization: 1.022400747988371\n",
      "  Iteration 20/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419117.17787774315\n",
      "    background_normalization: 0.9990969032872745\n",
      "  Iteration 21/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419503.1781891738\n",
      "    background_normalization: 1.020903831468017\n",
      "  Iteration 22/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419537.4338580138\n",
      "    background_normalization: 1.0143336117743598\n",
      "  Iteration 23/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419391.0999065008\n",
      "    background_normalization: 0.996731360121657\n",
      "  Iteration 24/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419612.81397406233\n",
      "    background_normalization: 1.0131337570188672\n",
      "  Iteration 25/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419636.6847504409\n",
      "    background_normalization: 1.0081895689199645\n",
      "  Iteration 26/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419559.4179241776\n",
      "    background_normalization: 0.9949613976847363\n",
      "  Iteration 27/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419685.6098920044\n",
      "    background_normalization: 1.007241126899907\n",
      "  Iteration 28/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419703.1797833361\n",
      "    background_normalization: 1.0035377514781483\n",
      "  Iteration 29/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419664.32482954196\n",
      "    background_normalization: 0.9936399908743172\n",
      "  Iteration 30/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419487.46208422736\n",
      "    background_normalization: 1.0028055191196619\n",
      "  Iteration 31/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 418669.1558819624\n",
      "    background_normalization: 0.9799331479447816\n",
      "  Iteration 32/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419634.10911400197\n",
      "    background_normalization: 1.0211029605768254\n",
      "  Iteration 33/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419659.03221757046\n",
      "    background_normalization: 1.0136432733397405\n",
      "  Iteration 34/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419411.490253184\n",
      "    background_normalization: 0.9943973775742112\n",
      "  Iteration 35/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419725.5587795917\n",
      "    background_normalization: 1.015325684269482\n",
      "  Iteration 36/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419738.1626685151\n",
      "    background_normalization: 1.0099456346378402\n",
      "  Iteration 37/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419626.3826360004\n",
      "    background_normalization: 0.9957165764734817\n",
      "  Iteration 38/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419778.6108548996\n",
      "    background_normalization: 1.009612147376651\n",
      "  Iteration 39/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419787.8858903183\n",
      "    background_normalization: 1.0056281285483295\n",
      "  Iteration 40/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419731.6003448446\n",
      "    background_normalization: 0.9950185424057802\n",
      "  Iteration 41/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419813.53259433387\n",
      "    background_normalization: 1.0050135239487987\n",
      "  Iteration 42/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419820.6780524987\n",
      "    background_normalization: 1.002046819706305\n",
      "  Iteration 43/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419792.0089048097\n",
      "    background_normalization: 0.9941334048497183\n",
      "  Iteration 44/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419672.64219748904\n",
      "    background_normalization: 1.001496431493074\n",
      "  Iteration 45/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419151.89420566417\n",
      "    background_normalization: 0.9830572014967464\n",
      "  Iteration 46/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419768.8962983411\n",
      "    background_normalization: 1.0159118239103546\n",
      "  Iteration 47/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419781.17991715414\n",
      "    background_normalization: 1.0099829791967136\n",
      "  Iteration 48/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419623.7705518758\n",
      "    background_normalization: 0.994708877170725\n",
      "  Iteration 49/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> continue\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 1.0\n",
      "    loglikelihood: 419821.7835588583\n",
      "    background_normalization: 1.0112793627463252\n",
      "  Iteration 50/50 \n",
      "--> pre-processing\n",
      "--> E-step\n",
      "... skip E-step ...\n",
      "--> M-step\n",
      "--> post-processing\n",
      "... calculating the expected events with the updated model map ...\n",
      "--> checking stopping criteria\n",
      "--> --> stop\n",
      "--> registering results\n",
      "--> showing results\n",
      "    alpha: 5.0\n",
      "    loglikelihood: 419827.8357267488\n",
      "    background_normalization: 1.0070105323513425\n",
      "#### Done ####\n",
      "\n",
      "CPU times: user 3min 26s, sys: 2min 3s, total: 5min 30s\n",
      "Wall time: 1min 25s\n"
     ]
    }
   ],
   "source": [
    "%%time\n",
    "\n",
    "all_results = image_deconvolution.run_deconvolution()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "cc64ea8d",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[{'alpha': 1.0,\n",
      "  'background_normalization': 1.1900860583584663,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2babfa860>,\n",
      "  'iteration': 1,\n",
      "  'loglikelihood': 386050.327946638,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2babf8040>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2edeee560>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.1604351059838505,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2ee501db0>,\n",
      "  'iteration': 2,\n",
      "  'loglikelihood': 400418.0610733818,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62560>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2ee501ea0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0528532374315778,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2f41a6440>,\n",
      "  'iteration': 3,\n",
      "  'loglikelihood': 411089.6070768463,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61180>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2f41a4b20>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0586383806179276,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2efc4df30>,\n",
      "  'iteration': 4,\n",
      "  'loglikelihood': 412844.82476469607,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60d60>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2edeed720>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9646219744282969,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2b61bb370>,\n",
      "  'iteration': 5,\n",
      "  'loglikelihood': 405718.57862391905,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea602b0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60250>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.1066673898750912,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60640>,\n",
      "  'iteration': 6,\n",
      "  'loglikelihood': 415983.925941571,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60490>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60760>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0806318578055656,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61240>,\n",
      "  'iteration': 7,\n",
      "  'loglikelihood': 416858.4161653833,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea614b0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea613c0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0102344432919617,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62380>,\n",
      "  'iteration': 8,\n",
      "  'loglikelihood': 414257.0394215712,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62680>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61ab0>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0821152684078852,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62f20>,\n",
      "  'iteration': 9,\n",
      "  'loglikelihood': 417764.7103005161,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62ec0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62d10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0628439330942752,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60c70>,\n",
      "  'iteration': 10,\n",
      "  'loglikelihood': 418085.83036392974,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91f9a0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60c40>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.01071378053145,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60550>,\n",
      "  'iteration': 11,\n",
      "  'loglikelihood': 416671.5483449631,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91d060>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61bd0>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.06125861498167,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91d450>,\n",
      "  'iteration': 12,\n",
      "  'loglikelihood': 418586.7202159421,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91d360>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91cd00>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.046438809261912,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62920>,\n",
      "  'iteration': 13,\n",
      "  'loglikelihood': 418748.2154258507,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc8b0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea636a0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0064089218442853,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61720>,\n",
      "  'iteration': 14,\n",
      "  'loglikelihood': 417929.9387790803,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bd1b0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60e80>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.044315278190893,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91fe50>,\n",
      "  'iteration': 15,\n",
      "  'loglikelihood': 419053.901413677,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bff10>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91c850>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.032928348339306,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62860>,\n",
      "  'iteration': 16,\n",
      "  'loglikelihood': 419142.6261917602,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9beb00>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea60460>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0022726458324056,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91c880>,\n",
      "  'iteration': 17,\n",
      "  'loglikelihood': 418668.7303367079,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bfa90>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91c970>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0310819169451524,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62bf0>,\n",
      "  'iteration': 18,\n",
      "  'loglikelihood': 419331.81249085104,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bde40>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea63c10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.022400747988371,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62020>,\n",
      "  'iteration': 19,\n",
      "  'loglikelihood': 419384.6657808487,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bd630>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61c00>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9990969032872745,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e91c910>,\n",
      "  'iteration': 20,\n",
      "  'loglikelihood': 419117.17787774315,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bee60>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x2f3d14be0>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.020903831468017,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea63400>,\n",
      "  'iteration': 21,\n",
      "  'loglikelihood': 419503.1781891738,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be200>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea62350>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0143336117743598,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea61a20>,\n",
      "  'iteration': 22,\n",
      "  'loglikelihood': 419537.4338580138,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bd360>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42ea624a0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.996731360121657,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc520>,\n",
      "  'iteration': 23,\n",
      "  'loglikelihood': 419391.0999065008,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be4d0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc670>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0131337570188672,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc190>,\n",
      "  'iteration': 24,\n",
      "  'loglikelihood': 419612.81397406233,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc790>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc6d0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0081895689199645,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bfb50>,\n",
      "  'iteration': 25,\n",
      "  'loglikelihood': 419636.6847504409,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bef20>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf2b0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9949613976847363,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be2c0>,\n",
      "  'iteration': 26,\n",
      "  'loglikelihood': 419559.4179241776,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be320>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc2e0>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.007241126899907,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf730>,\n",
      "  'iteration': 27,\n",
      "  'loglikelihood': 419685.6098920044,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e996fb0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bed10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0035377514781483,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bd4b0>,\n",
      "  'iteration': 28,\n",
      "  'loglikelihood': 419703.1797833361,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e996da0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be3b0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9936399908743172,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bda20>,\n",
      "  'iteration': 29,\n",
      "  'loglikelihood': 419664.32482954196,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e997e80>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bcf10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0028055191196619,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bffd0>,\n",
      "  'iteration': 30,\n",
      "  'loglikelihood': 419487.46208422736,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e997460>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc160>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9799331479447816,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bc880>,\n",
      "  'iteration': 31,\n",
      "  'loglikelihood': 418669.1558819624,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994880>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bcd00>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0211029605768254,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be0e0>,\n",
      "  'iteration': 32,\n",
      "  'loglikelihood': 419634.10911400197,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9944f0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be260>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0136432733397405,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf460>,\n",
      "  'iteration': 33,\n",
      "  'loglikelihood': 419659.03221757046,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994c40>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf850>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9943973775742112,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf5e0>,\n",
      "  'iteration': 34,\n",
      "  'loglikelihood': 419411.490253184,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995870>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bd000>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.015325684269482,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bfeb0>,\n",
      "  'iteration': 35,\n",
      "  'loglikelihood': 419725.5587795917,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e997520>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf220>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0099456346378402,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994cd0>,\n",
      "  'iteration': 36,\n",
      "  'loglikelihood': 419738.1626685151,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e898400>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e996d10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9957165764734817,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be800>,\n",
      "  'iteration': 37,\n",
      "  'loglikelihood': 419626.3826360004,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89beb0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bf010>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.009612147376651,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995390>,\n",
      "  'iteration': 38,\n",
      "  'loglikelihood': 419778.6108548996,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e8991b0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9973d0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0056281285483295,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994e50>,\n",
      "  'iteration': 39,\n",
      "  'loglikelihood': 419787.8858903183,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e899360>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995f90>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9950185424057802,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9943a0>,\n",
      "  'iteration': 40,\n",
      "  'loglikelihood': 419731.6003448446,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e898880>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e997340>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0050135239487987,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994820>,\n",
      "  'iteration': 41,\n",
      "  'loglikelihood': 419813.53259433387,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e898a00>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995000>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.002046819706305,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995330>,\n",
      "  'iteration': 42,\n",
      "  'loglikelihood': 419820.6780524987,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89bd30>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995cf0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9941334048497183,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9970a0>,\n",
      "  'iteration': 43,\n",
      "  'loglikelihood': 419792.0089048097,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89a080>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994520>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.001496431493074,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e995f30>,\n",
      "  'iteration': 44,\n",
      "  'loglikelihood': 419672.64219748904,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89a230>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994df0>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.9830572014967464,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9941c0>,\n",
      "  'iteration': 45,\n",
      "  'loglikelihood': 419151.89420566417,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89bc10>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e994280>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0159118239103546,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9bfc40>,\n",
      "  'iteration': 46,\n",
      "  'loglikelihood': 419768.8962983411,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89b250>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e9be980>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0099829791967136,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89b1c0>,\n",
      "  'iteration': 47,\n",
      "  'loglikelihood': 419781.17991715414,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89ac20>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89aa10>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 0.994708877170725,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89a3e0>,\n",
      "  'iteration': 48,\n",
      "  'loglikelihood': 419623.7705518758,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89a470>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89bfd0>},\n",
      " {'alpha': 1.0,\n",
      "  'background_normalization': 1.0112793627463252,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e8999c0>,\n",
      "  'iteration': 49,\n",
      "  'loglikelihood': 419821.7835588583,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89a650>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89b400>},\n",
      " {'alpha': 5.0,\n",
      "  'background_normalization': 1.0070105323513425,\n",
      "  'delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e89ba90>,\n",
      "  'iteration': 50,\n",
      "  'loglikelihood': 419827.8357267488,\n",
      "  'model_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e921db0>,\n",
      "  'processed_delta_map': <cosipy.image_deconvolution.modelmap.ModelMap object at 0x42e899030>}]\n"
     ]
    }
   ],
   "source": [
    "import pprint\n",
    "\n",
    "pprint.pprint(all_results)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a69308c-c13b-4162-820a-7ac3a514e0ba",
   "metadata": {},
   "source": [
    "**(If you want, you can save the results in the directory \"./results\" as follows)**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "44d94156-fc95-43f0-ac56-3e784bbad1eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "os.mkdir(\"./results\")\n",
    "\n",
    "for result in all_results:\n",
    "    iteration = result['iteration']\n",
    "    result['model_map'].write(f'./results/model_map_itr{iteration}.hdf5')\n",
    "\n",
    "    with open(f'./results/result_itr{iteration}.txt', 'w') as f:\n",
    "        paramlist = ['alpha', 'loglikelihood', 'background_normalization']\n",
    "\n",
    "        for param in paramlist:\n",
    "            value = result[param]\n",
    "            f.write(f'{param}: {value}\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9d32d0a8",
   "metadata": {},
   "source": [
    "# 5. Analyze the results\n",
    "Examples to see/analyze the results are shown below."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f577c7ac",
   "metadata": {},
   "source": [
    "## Log-likelihood\n",
    "\n",
    "Plotting the log-likelihood vs the number of iterations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "445ee3d5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y = [], []\n",
    "\n",
    "for result in all_results:\n",
    "    x.append(result['iteration'])\n",
    "    y.append(result['loglikelihood'])\n",
    "    \n",
    "plt.plot(x, y)\n",
    "plt.grid()\n",
    "plt.xlabel(\"iteration\")\n",
    "plt.ylabel(\"loglikelihood\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f085706",
   "metadata": {},
   "source": [
    "## Alpha (the factor used for the acceleration)\n",
    "\n",
    "Plotting $\\alpha$ vs the number of iterations. $\\alpha$ is a parameter to accelerate the EM algorithm (see the beginning of Section 4). If it is too large, reconstructed images may have artifacts."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "1695af05",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y = [], []\n",
    "\n",
    "for result in all_results:\n",
    "    x.append(result['iteration'])\n",
    "    y.append(result['alpha'])\n",
    "    \n",
    "plt.plot(x, y)\n",
    "plt.grid()\n",
    "plt.xlabel(\"iteration\")\n",
    "plt.ylabel(\"alpha\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b3298aa5",
   "metadata": {},
   "source": [
    "## Background normalization\n",
    "\n",
    "Plotting the background nomalization factor vs the number of iterations. If the backgroud model is accurate and the image is reconstructed perfectly, this factor should be close to 1."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "71ad8d7a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x, y = [], []\n",
    "\n",
    "for result in all_results:\n",
    "    x.append(result['iteration'])\n",
    "    y.append(result['background_normalization'])\n",
    "    \n",
    "plt.plot(x, y)\n",
    "plt.grid()\n",
    "plt.xlabel(\"iteration\")\n",
    "plt.ylabel(\"background_normalization\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "58e0d3a6",
   "metadata": {},
   "source": [
    "## The reconstructed images"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "94ab604d-12d9-4f81-b8d1-7dcbe793b6e8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "def plot_reconstructed_image(result, source_position = None): # source_position should be (l,b) in degrees\n",
    "    iteration = result['iteration']\n",
    "    image = result['model_map']\n",
    "\n",
    "    for energy_index in range(image.axes['Ei'].nbins):\n",
    "        map_healpxmap = HealpixMap(data = image[:,energy_index], unit = image.unit)\n",
    "\n",
    "        _, ax = map_healpxmap.plot('mollview')        \n",
    "        \n",
    "        _.colorbar.set_label(str(image.unit))\n",
    "        \n",
    "        if source_position is not None:\n",
    "            ax.scatter(source_position[0]*u.deg, source_position[1]*u.deg, transform=ax.get_transform('world'), color = 'red')\n",
    "\n",
    "        plt.title(label = f\"iteration = {iteration}, energy_index = {energy_index} ({image.axes['Ei'].bounds[energy_index][0]}-{image.axes['Ei'].bounds[energy_index][1]})\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b8cdf58",
   "metadata": {},
   "source": [
    "Plotting the reconstructed images in all of the energy bands at the 50th iteration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "2769b6e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 600x600 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "iteration = 49\n",
    "\n",
    "plot_reconstructed_image(all_results[iteration])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9955eb5c-5c49-4c20-bbe5-32d2d547527a",
   "metadata": {},
   "source": [
    "An example to plot the image in the log scale"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2e91030b-0ae0-4d77-8bf8-e51bb636536c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 850x540 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "iteration_idx = 49\n",
    "\n",
    "result = all_results[iteration_idx]\n",
    "\n",
    "iteration = result['iteration']\n",
    "image = result['model_map']\n",
    "\n",
    "data = image[:,0]\n",
    "data[data <= 0 * data.unit] = 1e-12 * data.unit\n",
    "\n",
    "hp.mollview(data, min = 1e-5, norm ='log', unit = str(data.unit), title = f'511 keV image at {iteration}th iteration', cmap = 'magma')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "96731b2a-be51-4b40-b8b7-34ed55d004ad",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
